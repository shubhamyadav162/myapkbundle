name: Build APK (Fixed)

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          cache: 'gradle'

      - name: Fix React Native Gradle Plugin
        run: |
          # Create patch file for the React Native Gradle Plugin
          cat > patch_rn_gradle.kt << 'EOF'
          import org.gradle.api.tasks.bundling.Jar
          import org.gradle.api.tasks.testing.Test
          import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

          plugins {
              kotlin("jvm")
              `java-gradle-plugin`
              `maven-publish`
          }

          group = "com.facebook.react"

          repositories {
              mavenCentral()
              google()
          }

          dependencies {
              implementation(gradleApi())
              implementation("com.android.tools.build:gradle:7.4.2")
              implementation("com.google.code.gson:gson:2.8.9")

              testImplementation(gradleTestKit())
              testImplementation("junit:junit:4.13.2")
              testImplementation("org.assertj:assertj-core:3.21.0")
          }

          gradlePlugin {
              plugins {
                  create("react") {
                      id = "com.facebook.react"
                      implementationClass = "com.facebook.react.ReactPlugin"
                  }
              }
          }

          java {
              sourceCompatibility = JavaVersion.VERSION_11
              targetCompatibility = JavaVersion.VERSION_11
          }

          kotlin {
              tasks.withType<KotlinCompile>().configureEach {
                  kotlinOptions {
                      jvmTarget = JavaVersion.VERSION_11.toString()
                      
                      // Fix for Kotlin DSL error in Gradle 8+
                      val enableWarnings = project.providers
                          .gradleProperty("enableWarningsAsErrors")
                          .forUseAtConfigurationTime()
                          .map { it.toBoolean() }
                          .orElse(false)
                      
                      allWarningsAsErrors.set(enableWarnings)
                  }
              }
          }

          tasks.withType<Test>().configureEach {
              testLogging {
                  exceptionFormat = org.gradle.api.tasks.testing.logging.TestExceptionFormat.FULL
                  showStandardStreams = true
                  showStackTraces = true
                  showCauses = true
              }
          }

          val jar by tasks.getting(Jar::class) {
              archiveBaseName.set("react-native-gradle-plugin")
              from(sourceSets.main.get().output)
          }

          publishing {
              publications {
                  create<MavenPublication>("reactPlugin") {
                      artifactId = "react-native-gradle-plugin"
                      from(components["java"])
                  }
              }
              repositories {
                  maven {
                      url = uri("${layout.buildDirectory.get()}/repo")
                  }
              }
          }
          EOF

          # Find and replace the React Native Gradle Plugin file
          find node_modules -path "*/react-native-gradle-plugin/build.gradle.kts" | while read file; do
            echo "Found React Native Gradle Plugin at: $file"
            cp patch_rn_gradle.kt "$file"
            echo "Replaced $file with patched version"
          done

      - name: Set execute permissions on gradlew
        run: chmod +x android/gradlew

      - name: Update Gradle wrapper to 7.5.1
        run: |
          mkdir -p android/gradle/wrapper
          echo "distributionBase=GRADLE_USER_HOME" > android/gradle/wrapper/gradle-wrapper.properties
          echo "distributionPath=wrapper/dists" >> android/gradle/wrapper/gradle-wrapper.properties
          echo "distributionUrl=https\://services.gradle.org/distributions/gradle-7.5.1-all.zip" >> android/gradle/wrapper/gradle-wrapper.properties
          echo "zipStoreBase=GRADLE_USER_HOME" >> android/gradle/wrapper/gradle-wrapper.properties
          echo "zipStorePath=wrapper/dists" >> android/gradle/wrapper/gradle-wrapper.properties

      - name: Set up signing configs
        run: |
          # Create debug keystore
          mkdir -p android/app/src/main/assets
          keytool -genkey -v -keystore android/app/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=Android Debug,O=Android,C=US"
          
          # Configure release keystore (use debug for simplicity in GitHub Actions)
          echo "MYAPP_UPLOAD_STORE_FILE=debug.keystore" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_ALIAS=androiddebugkey" >> android/gradle.properties
          echo "MYAPP_UPLOAD_STORE_PASSWORD=android" >> android/gradle.properties
          echo "MYAPP_UPLOAD_KEY_PASSWORD=android" >> android/gradle.properties

      - name: Configure android/gradle.properties
        run: |
          echo "org.gradle.jvmargs=-Xmx2048m -XX:MaxMetaspaceSize=512m -Dfile.encoding=UTF-8" >> android/gradle.properties
          echo "android.useAndroidX=true" >> android/gradle.properties
          echo "android.enableJetifier=true" >> android/gradle.properties
          echo "reactNativeArchitectures=armeabi-v7a,arm64-v8a,x86,x86_64" >> android/gradle.properties
          echo "newArchEnabled=false" >> android/gradle.properties
          echo "hermesEnabled=true" >> android/gradle.properties
          echo "org.gradle.daemon=false" >> android/gradle.properties
          echo "kotlin.incremental=false" >> android/gradle.properties
          echo "FLIPPER_VERSION=0.202.0" >> android/gradle.properties

      - name: Create google-services.json if missing
        run: |
          if [ ! -f android/app/google-services.json ]; then
            echo '{
              "project_info": {
                "project_number": "123456789",
                "project_id": "example-app",
                "storage_bucket": "example-app.appspot.com"
              },
              "client": [
                {
                  "client_info": {
                    "mobilesdk_app_id": "1:123456789:android:abcdef123456789",
                    "android_client_info": {
                      "package_name": "com.bigshow"
                    }
                  }
                }
              ]
            }' > android/app/google-services.json
            echo "Created placeholder google-services.json"
          else
            echo "google-services.json already exists"
          fi

      - name: Clean Android project
        run: |
          cd android
          ./gradlew clean || true
          cd ..

      - name: Build Release APK
        working-directory: android
        run: ./gradlew assembleRelease --info --no-daemon

      - name: Check APK/AAB existence
        run: |
          ls -l android/app/build/outputs/apk/release/ || echo "No APKs found"
          ls -l android/app/build/outputs/bundle/release/ || echo "No AABs found"

      - name: Find and upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            android/app/build/outputs/apk/release/*.apk
            android/app/build/outputs/bundle/release/*.aab 